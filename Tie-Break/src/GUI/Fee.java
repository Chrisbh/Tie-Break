package GUI;

import BE.MembershipType;
import BLL.MembershipTypeManager;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

public class Fee extends javax.swing.JFrame
{
    private static Fee instance = null;
    private MembershipTypeManager mtManager;
    private DefaultListModel membershiptypes = new DefaultListModel();

    /**
     * Constructor for the Fee class
     */
    public Fee()
    {
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        mtManager = MembershipTypeManager.getInstance();
        setTitle("Prissætning af kontingent");
        showMT();

        splMT.addListSelectionListener(new ListSelectionListener()
        {
            @Override
            public void valueChanged(ListSelectionEvent lse)
            {
                if (!(lse.getValueIsAdjusting() || splMT.isSelectionEmpty()))
                {
                    showPrice();
                }
            }
        });
    }

    /**
     * Conversion of the Fee class to simpleton
     * @return An instance of the Fee class
     */
    public static Fee getInstance()
    {
        if (instance == null)
        {
            instance = new Fee();
        }
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        lblTitle = new javax.swing.JLabel();
        lblSummerPrice = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        btnCancel = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        spMembershipType = new javax.swing.JScrollPane();
        splMT = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Prissætning af kontingent");

        lblSummerPrice.setText("Pris:");

        btnCancel.setText("Annuller");
        btnCancel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCancelActionPerformed(evt);
            }
        });

        btnAdd.setText("Tilføj pris");
        btnAdd.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAddActionPerformed(evt);
            }
        });

        spMembershipType.setViewportView(splMT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(spMembershipType, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblSummerPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnCancel, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnCancel});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSummerPrice)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAdd)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel))
                    .addComponent(spMembershipType, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAdd, btnCancel});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnAddActionPerformed
    {//GEN-HEADEREND:event_btnAddActionPerformed
        setPrice();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCancelActionPerformed
    {//GEN-HEADEREND:event_btnCancelActionPerformed
        Administration.getInstance().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /*
         * Set system look and feel
         */
        try
        {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
        catch (Exception e)
        {
            //Do nothing
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new Fee().setVisible(true);
            }
        });
    }

    /*
     * Shows the different membership types in the listmodel
     */
    private void showMT()
    {
        try
        {
            ArrayList<String> mtid = MembershipTypeManager.getInstance().getMTName();

            for (String mt : mtid)
            {
                membershiptypes.addElement(mt);
            }
            splMT.setModel(membershiptypes);
        }
        catch (SQLException e)
        {
            System.out.println("ERROR - " + e.getMessage());
        }
    }

    /*
     * Shows the price of a membership type
     */
    private void showPrice()
    {
        try
        {
            String mtname = splMT.getSelectedValue().toString();
            int mtid = mtManager.getInstance().getIdByName(mtname);
            MembershipType mt = mtManager.getMemberByID(mtid);
            txtPrice.setText(Integer.toString(mt.getPrice()));
        }
        catch (SQLException ex)
        {
            System.out.println("ERROR - " + ex);
        }
        catch (Exception ex)
        {
            System.out.println("ERROR - " + ex);
        }
    }

    /*
     * Sets the price of a membership type
     */
    private void setPrice()
    {
        try
        {
            String mtname = splMT.getSelectedValue().toString();
            int mtid = mtManager.getInstance().getIdByName(mtname);
            if (JOptionPane.showConfirmDialog(null, "Vil du opdatere prisen", "Advarsel",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)
                    == JOptionPane.YES_OPTION)
            {
                try
                {
                    MembershipType mt = mtManager.getMemberByID(mtid);
                    String membershipName = splMT.toString();
                    int price = Integer.parseInt(txtPrice.getText());
                    MembershipType x = new MembershipType(mtid, membershipName, price);
                    try
                    {
                        mtManager.addPrice(x);
                        txtPrice.setText("");
                        dispose();
                    }
                    catch (Exception e)
                    {
                        System.out.println("ERROR - " + e);
                    }
                    Administration.getInstance().setVisible(true);
                }
                catch (Exception ex)
                {
                    System.out.println("ERROR - " + ex);
                }
            }
        }
        catch (SQLException ex)
        {
            System.out.println("ERROR - " + ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnAdd;
    public javax.swing.JButton btnCancel;
    public javax.swing.JLabel lblSummerPrice;
    public javax.swing.JLabel lblTitle;
    public javax.swing.JScrollPane spMembershipType;
    public javax.swing.JList splMT;
    public javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables
}
